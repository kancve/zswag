name: CI

on: [pull_request]

jobs:
  build-manylinux:
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    runs-on: ubuntu-latest
    container: ghcr.io/klebert-engineering/manylinux-cpp17-py${{ matrix.python-version }}:2021.3
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Configure
        run: |
          python3 -m venv venv && . ./venv/bin/activate
          pip install -U setuptools wheel pip
          mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..
      - name: Build
        working-directory: build
        run: |
          . ../venv/bin/activate
          cmake --build .
          mv bin/wheel bin/wheel-auditme
          mkdir bin/wheel && mv bin/wheel-auditme/zswag*.whl bin/wheel
          auditwheel repair bin/wheel-auditme/pyzswagcl*.whl -w bin/wheel
      - name: Test
        working-directory: build
        run: |
          . ../venv/bin/activate
          ctest -C Release --verbose --no-test=fail
      - name: Deploy
        uses: actions/upload-artifact@v2
        with:
          name: zswag-py${{ matrix.python-version }}-ubuntu-latest
          path: build/bin/wheel/*.whl
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, macos-latest, windows-latest]
        python-version: [3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - run: python -m pip install setuptools wheel
    - run: mkdir build
    - name: Build (macOS)
      if: matrix.os == 'macos-latest' || matrix.os == 'macos-10.15'
      working-directory: build
      run: |
        python -m pip install delocate
        brew install openssl
        export OPENSSL_ROOT_DIR=$(brew --prefix openssl)
        cmake -DPython3_ROOT_DIR=$pythonLocation \
              -DPython3_FIND_FRAMEWORK=LAST \
              -DCMAKE_BUILD_TYPE=Release \
              -DHTTPLIB_USE_BROTLI_IF_AVAILABLE=OFF ..
        cmake --build .
        mv bin/wheel bin/wheel-auditme  # Same as on Linux
        mkdir bin/wheel && mv bin/wheel-auditme/zswag*.whl bin/wheel
        ../deps/python-cmake-wheel/repair-wheel-macos.bash \
              "$(pwd)"/bin/wheel-auditme/pyzswagcl*.whl \
              "$(pwd)"/bin/wheel pyzswagcl
    - name: Build (Windows)
      if: matrix.os == 'windows-latest'
      working-directory: build
      run: |
        choco install --no-progress -y openssl
        echo "cmake -DPython3_ROOT_DIR=$env:pythonLocation"
        cmake "-DPython3_ROOT_DIR=$env:pythonLocation" -DPython3_FIND_REGISTRY=LAST -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release
    - name: Test
      working-directory: build
      run: |
        ctest -C Release --verbose --no-test=fail
    - name: Deploy
      uses: actions/upload-artifact@v2
      with:
        name: zswag-py${{ matrix.python-version }}-${{ matrix.os }}
        path: build/bin/wheel/*.whl
